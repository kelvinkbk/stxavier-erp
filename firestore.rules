// Sample Firestore Security Rules
// Copy these rules to your Firebase Console -> Firestore Database -> Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can read all user docs but only write their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Public user lookup collection for login purposes (only email and username)
    match /user_lookup/{userId} {
      allow read: if true; // Allow unauthenticated read for login
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Students collection - accessible to admin and faculty
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Faculty collection - accessible to admin
    match /faculty/{facultyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Attendance records - faculty and admin can write, students can read their own
    match /attendance/{attendanceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Fee records - admin can write, students can read their own
    match /fees/{feeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Timetable - all authenticated users can read, admin and faculty can write
    match /timetable/{timetableId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Notices - all authenticated users can read, admin can write
    match /notices/{noticeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Library records - all authenticated users can read, admin and faculty can write
    match /library/{libraryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Events - all authenticated users can read, admin can write
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Exams - all authenticated users can read, admin and faculty can write
    match /exams/{examId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Marks - students can read their own, faculty and admin can read/write
    match /marks/{markId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
}
