name: 🚀 St. Xavier ERP - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Code Quality & Testing
  quality-check:
    name: 🔍 Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🛡️ Security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: 📝 TypeScript check
      run: npx tsc --noEmit
      
    - name: 🧹 Lint check
      run: npm run lint
      continue-on-error: true
      
    - name: 🧪 Run tests
      run: npm test
      continue-on-error: true

  # Web Build & Deploy
  web-deploy:
    name: 🌐 Web Build & Deploy
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build web version
      run: npm run build:web
      env:
        EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./

  # Mobile Build Check
  mobile-check:
    name: 📱 Mobile Build Check
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 📱 Expo Doctor
      run: npx expo doctor
      continue-on-error: true
      
    - name: 🏗️ Check Expo build
      run: npx expo export --platform all --output-dir build-check
      continue-on-error: true

  # Performance Monitoring
  performance-check:
    name: ⚡ Performance Analysis
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 📊 Bundle size analysis
      run: |
        npm run build:web
        npx bundlesize
      continue-on-error: true
      
    - name: ⚡ Performance test
      run: npm run performance:test
      continue-on-error: true

  # Security Scan
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Notification
  notify:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [web-deploy, mobile-check, performance-check]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📧 Notify deployment status
      run: |
        echo "🎉 St. Xavier ERP deployment pipeline completed!"
        echo "✅ Web: Deployed to production"
        echo "📱 Mobile: Build verified"
        echo "⚡ Performance: Analyzed"
        echo "🛡️ Security: Scanned"
